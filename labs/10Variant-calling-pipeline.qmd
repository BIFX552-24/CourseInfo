---
title: "Variant Calling Pipeline"
date: "2024-11-05"
margin-footer: "[Slides](/standalone/labs/10Variant-calling-pipeline.html), [Assignment](/standalone/hw/L10Variant-calling-pipeline.html)"
---

## Today's Lab

<!-- 
GitHub Classroom:
  - Starter code: https://github.com/BIFX552-24/Variant-Calling-Pipeline/
  - Individual Assignment
  - Private
-->

During the next two classes we will create a Snakemake pipeline following the workflow outlined in the [Variant Calling Workflow](https://datacarpentry.org/wrangling-genomics/) lesson from this week. Start with [this empty repository](https://classroom.github.com/a/L7IUdSFx).

## Setup

* Accept the assignment from GitHub Classroom.
* Clone the repository to the Hood cluster.

:::{.content-visible when-profile="book"}
::: {.callout-note}
Be sure to start a job on the cluster with:

```
srun --pty bash
```
:::
:::

## Variant Calling Workflow

The specific commands we would need to execute for the `SRR2584863` sample follow. We will use these commands to create a Snakemake pipeline.

* Starting working directory
  * `cd ~/Ecoli`

:::{.content-visible when-profile="slides"}
## Variant Calling Workflow
:::

* Trimming
  * `trimmomatic PE -threads 1 untrimmed_fastq/SRR2584863_1.fastq.gz untrimmed_fastq/SRR2584863_2.fastq.gz trimmed_fastq/SRR2584863_1.trimmed.fastq trimmed_fastq/SRR2584863_1un.trimmed.fastq trimmed_fastq/SRR2584863_2.trimmed.fastq trimmed_fastq/SRR2584863_2un.trimmed.fastq SLIDINGWINDOW:4:20 MINLEN:25 ILLUMINACLIP:untrimmed_fastq/NexteraPE-PE.fa:2:40:15`

:::{.content-visible when-profile="slides"}
## Variant Calling Workflow
:::

* Quality control checks
  * `fastqc -o qc trimmed_fastq/SRR2584863_1.fastq.gz`
  * `fastqc -o qc trimmed_fastq/SRR2584863_2.fastq.gz`
  * Print any warnings and errors to `qc/SRR2584863_1.warnings`, `qc/SRR2584863_1.errors`, etc.

:::{.content-visible when-profile="slides"}
## Variant Calling Workflow
:::

* Align reads to reference genome (use the `trimmed_fastq_small` directory during lab)
  * `bwa mem data/ecoli_rel606.fasta data/trimmed_fastq/SRR2584863_1.trimmed.fastq data/trimmed_fastq_small/SRR2584863_2.trimmed.fastq > results/sam/SRR2584863.aligned.sam`

:::{.content-visible when-profile="slides"}
## Variant Calling Workflow
:::
  
* Convert to BAM file
  * `samtools view -S -b results/sam/SRR2584863.aligned.sam > results/bam/SRR2584863.aligned.bam`

:::{.content-visible when-profile="slides"}
## Variant Calling Workflow
:::
  
* Sort BAM file
  * `samtools sort -o results/bam/SRR2584863.aligned.sorted.bam results/bam/SRR2584863.aligned.bam`

:::{.content-visible when-profile="slides"}
## Variant Calling Workflow
:::

* Calculate read coverage
  * `bcftools mpileup -O b -o results/bcf/SRR2584863_raw.bcf -f data/ecoli_rel606.fasta results/bam/SRR2584863.aligned.sorted.bam`

:::{.content-visible when-profile="slides"}
## Variant Calling Workflow
:::
    
* Detect SNVs
  * `bcftools call --ploidy 1 -m -v -o results/vcf/SRR2584863_variants.vcf results/bcf/SRR2584863_raw.bcf`

:::{.content-visible when-profile="slides"}
## Variant Calling Workflow
:::
  
* Filter SNVs
  * `vcfutils.pl varFilter results/vcf/SRR2584863_variants.vcf > results/vcf/SRR2584863_final_variants.vcf`
